{"version":3,"sources":["DragAndDrop/Draggable.tsx","DragAndDrop/Droppable.tsx","DragAndDrop/DragAndDrop.tsx","Memo.tsx","UsePrevious.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Draggable","children","useDrag","type","collect","monitor","isDragging","item","id","drag","ref","className","style","opacity","Droppable","onDrop","useDrop","accept","drop","getItem","isOver","backgroundColor","originalLeftItems","Array","fill","map","i","originalRightItems","ReactDnd","useState","leftItems","setLeftItems","rightItems","setRightItems","handleDrop","draggableItem","droppableItem","newLeftItems","newRightItems","leftDraggableIndex","findIndex","rightDraggableIndex","droppableIndex","display","flexDirection","flex","gap","ReactDndWrapper","DndProvider","backend","HTML5Backend","Memo","prop","setProp","child2","Child2","Child","renderCount","setRenderCount","useEffect","Child2Bare","onClick","Math","random","toString","React","memo","Counter","count","setCount","prev","value","useRef","current","usePrevious","App","selection","setSelection","margin","cursor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67f6c8ae.chunk.js","sourcesContent":["import React, { ReactNode } from 'react'\nimport { useDrag } from 'react-dnd'\n\nconst Draggable = ({ children }: { children: ReactNode }) => {\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: 'Draggable',\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging()\n    }),\n    item: { id: children }\n  }))\n\n  return (\n    <div\n      ref={drag}\n      className=\"draggable\"\n      style={{ opacity: isDragging ? 0.5 : 1 }}\n    >\n      <p>{children}</p>\n    </div>\n  )\n}\n\nexport default Draggable\n","import React from 'react'\nimport { useDrop } from 'react-dnd'\nimport './index.css'\n\nconst Droppable = ({\n  onDrop,\n  id\n}: {\n  onDrop: (draggable: any, droppable: any) => void\n  id: number\n}) => {\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: 'Draggable',\n    drop: (item: any, monitor: any) => onDrop(monitor.getItem(), id),\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver()\n    })\n  }))\n\n  return (\n    <div\n      ref={drop}\n      className=\"droppable\"\n      style={{ backgroundColor: isOver ? 'cyan' : 'white' }}\n    ></div>\n  )\n}\n\nexport default Droppable\n","import React, { useState } from 'react'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport Draggable from './Draggable'\nimport Droppable from './Droppable'\n\nconst originalLeftItems = new Array(10).fill('').map((item, i) => ({\n  id: i,\n  type: 'Draggable'\n}))\nconst originalRightItems = new Array(10).fill('').map((item, i) => ({\n  id: i + 10,\n  type: 'Droppable'\n}))\n\nconst ReactDnd = () => {\n  const [leftItems, setLeftItems] = useState(originalLeftItems)\n  const [rightItems, setRightItems] = useState(originalRightItems)\n\n  const handleDrop = (draggableItem: any, droppableItem: any) => {\n    const newLeftItems = [...leftItems]\n    const newRightItems = [...rightItems]\n    const leftDraggableIndex = newLeftItems.findIndex(\n      (item) => item.type === 'Draggable' && item.id === draggableItem.id\n    )\n    const rightDraggableIndex = newRightItems.findIndex(\n      (item) => item.type === 'Draggable' && item.id === draggableItem.id\n    )\n    if (leftDraggableIndex > -1) {\n      newLeftItems[leftDraggableIndex] = {\n        id: droppableItem,\n        type: 'Droppable'\n      }\n      const droppableIndex = newRightItems.findIndex(\n        (item) => item.type === 'Droppable' && item.id === droppableItem\n      )\n      newRightItems[droppableIndex] = {\n        id: draggableItem.id,\n        type: 'Draggable'\n      }\n    } else {\n      newRightItems[rightDraggableIndex] = {\n        id: droppableItem,\n        type: 'Droppable'\n      }\n      const droppableIndex = newLeftItems.findIndex(\n        (item) => item.type === 'Droppable' && item.id === droppableItem\n      )\n      newLeftItems[droppableIndex] = {\n        id: draggableItem.id,\n        type: 'Draggable'\n      }\n    }\n    setLeftItems(newLeftItems)\n    setRightItems(newRightItems)\n  }\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'row' }}>\n      <div\n        style={{ flex: 1, display: 'flex', flexDirection: 'column', gap: 8 }}\n      >\n        <h2>Draggables</h2>\n        {leftItems.map((item) => {\n          return item.type === 'Droppable' ? (\n            <Droppable onDrop={handleDrop} id={item.id} />\n          ) : (\n            <Draggable>{item.id}</Draggable>\n          )\n        })}\n      </div>\n      <div\n        style={{ flex: 1, display: 'flex', flexDirection: 'column', gap: 8 }}\n      >\n        <h2>Droppables</h2>\n        <div style={{ flex: 1, display: 'flex', flexDirection: 'row', gap: 8 }}>\n          {rightItems.map((item) => {\n            return item.type === 'Droppable' ? (\n              <Droppable onDrop={handleDrop} id={item.id} />\n            ) : (\n              <Draggable>{item.id}</Draggable>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst ReactDndWrapper = () => {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <ReactDnd />\n    </DndProvider>\n  )\n}\n\nexport default ReactDndWrapper\n","import React, { useEffect, useState } from 'react'\n\nexport default function Memo() {\n  const [prop, setProp] = useState('')\n\n  // const child2 = useMemo(() => <Child2 setProp={setProp} />, [setProp])\n  const child2 = <Child2 setProp={setProp} />\n\n  return (\n    <>\n      <Child prop={prop} />\n      {child2}\n    </>\n  )\n}\n\nfunction Child({ prop }: { prop: string }) {\n  const [renderCount, setRenderCount] = useState(0)\n  useEffect(() => {\n    setRenderCount(renderCount + 1)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [prop])\n\n  return (\n    <div>\n      <span>Child 1 render count {renderCount}</span>\n      <div>prop value: {prop}</div>\n    </div>\n  )\n}\n\nconst Child2Bare = ({ setProp }: { setProp: (prop: string) => void }) => {\n  const [renderCount, setRenderCount] = useState(0)\n  useEffect(() => {\n    setRenderCount(renderCount + 1)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setProp])\n\n  return (\n    <>\n      <span>Child 2 render count {renderCount}</span>\n      <button onClick={() => setProp(Math.random().toString())}>\n        Change Prop\n      </button>\n    </>\n  )\n}\n\n// const Child2 = Child2Bare\nconst Child2 = React.memo(Child2Bare)\n","import React, { useEffect, useRef, useState } from 'react'\n\nfunction usePrevious(value: number) {\n  const ref = useRef<number | null>(null)\n  useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n\nexport default function Counter() {\n  const [count, setCount] = useState(0)\n\n  const prev = usePrevious(count)\n\n  return (\n    <div>\n      <p>Current: {count}</p>\n      <p>Previous: {prev}</p>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n      <button onClick={() => setCount(count - 1)}>Decrement</button>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport './App.css'\nimport ReactDnd from './DragAndDrop/DragAndDrop'\nimport Memo from './Memo'\nimport UsePrevious from './UsePrevious'\n\nfunction App() {\n  const [selection, setSelection] = useState('')\n  return (\n    <div\n      style={{\n        margin: '1rem',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '0.5rem'\n      }}\n    >\n      <h1 style={{ cursor: 'pointer' }} onClick={() => setSelection('')}>\n        Tutorials\n      </h1>\n      <ul style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n        <li\n          style={{\n            cursor: 'pointer',\n            color: selection === 'react-dnd' ? 'red' : 'blue'\n          }}\n          onClick={() => setSelection('react-dnd')}\n        >\n          react-dnd\n        </li>\n        <li\n          style={{\n            cursor: 'pointer',\n            color: selection === 'use-previous' ? 'red' : 'blue'\n          }}\n          onClick={() => setSelection('use-previous')}\n        >\n          use-previous\n        </li>\n        <li\n          style={{\n            cursor: 'pointer',\n            color: selection === 'use-memo' ? 'red' : 'blue'\n          }}\n          onClick={() => setSelection('use-memo')}\n        >\n          use-memo\n        </li>\n      </ul>\n      {selection === 'react-dnd' && <ReactDnd />}\n      {selection === 'use-previous' && <UsePrevious />}\n      {selection === 'use-memo' && <Memo />}\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}